{"componentChunkName":"component---node-modules-gatsby-theme-code-notes-src-templates-note-js","path":"/bonding/","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Bond interface en network/interfaces\",\n  \"tags\": [\"linux\", \"networks\", \"posts\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"intro\"\n  }, \"Intro\"), mdx(\"p\", null, \"En este peque\\xF1o post vamos a hablar sobre c\\xF3mo configurar dos interfaces de linux para que act\\xFAen como una interfaz unificada, lo que se conoce como \\\"bonding\\\".\"), mdx(\"p\", null, \"En mi caso esta posibilidad me conviene porque me permite configurar dos interfaces con la misma direcci\\xF3n IP en la peque\\xF1a placa ARM que uso para mis experimentos. No es una placa que tenga conectada siempre, o que tenga siempre en el mismo sitio. Gracias a esta configuraci\\xF3n puedo usar un cable Ethernet para trabajar en ella o desconectarla y llev\\xE1rmela a otro punto de la casa sin que esto suponga ning\\xFAn problema a la hora de operar en ella.\"), mdx(\"p\", null, \"Para lograr ese comportamiento he elegido el modo de bonding \\\"activo-pasivo\\\". Existen otros modos\", mdx(\"sup\", _extends({\n    parentName: \"p\"\n  }, {\n    \"id\": \"fnref-1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"sup\"\n  }, {\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }), \"1\")), \" que permiten configurar las interfaces para conseguir m\\xE1s disponibilidad o m\\xE1s rendimiento.\"), mdx(\"p\", null, \"Lo primero ser\\xE1 preparar los elementos necesarios en nuestro equipo:\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"sudo modprobe bonding\\nsudo lsmod | grep bonding\\nsudo echo \\\"bonding\\\" /etc\\nsudo apt-get install -y ifenslave\\n\")), mdx(\"h2\", {\n    \"id\": \"configurando-las-interfaces-esclavas\"\n  }, \"Configurando las interfaces esclavas\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"allow-bond0 eth0\\nauto eth0\\n  iface eth0 inet manual\\n  bond-master bond0\\n  bond-primary eth0\\n\\nallow-hotplug wlan0\\n  auto wlan0\\n  iface wlan0 inet manual\\n  bond-master bond0\\n  bond-primary eth0\\n  wpa-conf /etc/wpa_supplicant/wpa_supplicant.conf\\n  wireless-mode Managed\\n  wireless-power off\\n\")), mdx(\"p\", null, \"En el caso de la interfaz de wireless tambi\\xE9n tendremos que modificar el archivo \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"/etc/wpa_supplicant/wap_supplicant.conf\"), \" para a\\xF1adir el nombre y la contrase\\xF1a de la red wifi a la que queramos conectarnos.\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"ctrl_interface=/run/wpa_supplicant\\nupdate_config=1\\n\\nnetwork={\\n  ssid=\\\"wifi_name\\\"\\n  psk=\\\"wifi_passphrase\\\"\\n}\\n\")), mdx(\"h2\", {\n    \"id\": \"configurando-la-interfaz-de-bond0\"\n  }, \"Configurando la interfaz de bond0\"), mdx(\"p\", null, \"La interfaz de bond es la que va a estar operativa a nivel de capa 3 por lo que ser\\xE1 en ella donde coloquemos la configuraci\\xF3n IP. Tambi\\xE9n hemos configurado algunos temporizadores como el tiempo entre chequeos (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bond-miimon\"), \") y el tiempo que tiene que pasar para que una interfaz se marque como disponible o ca\\xEDda (\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bond-updelay\"), \" y \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"bond-downdelay\"), \").\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {}), \"auto bond0\\niface bond0 inet static\\n  address 192.168.0.4\\n  netmask 255.255.255.0\\n  gateway 192.168.0.1 \\n  dns-nameservers 8.8.8.8 1.0.0.1\\n  slaves eth0 wlan0\\n  bond-mode active-backup\\n  bond-miimon 100\\n  bond-downdelay 200\\n  bond-updelay 200\\n  bond-slaves none\\n\")), mdx(\"h2\", {\n    \"id\": \"comprobando-el-bond\"\n  }, \"Comprobando el bond\"), mdx(\"p\", null, \"Para comprobar el bond podemos utilizar\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-bash\"\n  }), \"cat /proc/net/bonding/bond0\\n\")), mdx(\"h2\", {\n    \"id\": \"referencias\"\n  }, \"Referencias\"), mdx(\"p\", null, mdx(\"sup\", _extends({\n    parentName: \"p\"\n  }, {\n    \"id\": \"fnref-1\"\n  }), mdx(\"a\", _extends({\n    parentName: \"sup\"\n  }, {\n    \"href\": \"#fn-1\",\n    \"className\": \"footnote-ref\"\n  }), \"1\")), \" \", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.thegeekdiary.com/what-are-the-network-bonding-modes-in-centos-rhel/\"\n  }), \"What are the Network Bonding Modes In CentOS / RHEL\")), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://www.kernel.org/doc/Documentation/networking/bonding.txt\"\n  }), \"Linux Ethernet Bonding Driver HOWTO\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Bond interface en network/interfaces","tags":["linux","networks","posts"],"emoji":null,"link":null},"fields":{"dateModified":"Jul 19, 2020 19:48 PM","modifiedTimestamp":"2020-07-19T19:48:31.000Z","slug":"/bonding/"},"tableOfContents":{"items":[{"url":"#intro","title":"Intro"},{"url":"#configurando-las-interfaces-esclavas","title":"Configurando las interfaces esclavas"},{"url":"#configurando-la-interfaz-de-bond0","title":"Configurando la interfaz de bond0"},{"url":"#comprobando-el-bond","title":"Comprobando el bond"},{"url":"#referencias","title":"Referencias"}]},"parent":{"__typename":"File","relativePath":"bonding.md"}}},"pageContext":{"id":"83336969-d7a4-5f49-a5e9-da269e9c81b7","previous":{"id":"2a4ea2a4-4595-54fe-bd2c-8e2e0b829665","frontmatter":{"title":"La receta del gazpacho de los Val.","tags":["recetas"]},"fields":{"slug":"/gazpacho/","dateModified":"2020-07-25T20:23:07.000Z"}},"next":{"id":"be551d75-bfca-5955-93ac-8b1efd91df40","frontmatter":{"title":"Arroz Basmati","tags":["recetas"]},"fields":{"slug":"/arroz_basmati/","dateModified":"2020-07-25T20:23:07.000Z"}},"hasUntagged":false,"basePath":"/"}}}